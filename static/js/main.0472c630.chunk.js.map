{"version":3,"sources":["components/timer/Timer.jsx","components/card/Card.jsx","components/enrollment/Enrollment.jsx","components/cards/Cards.jsx","components/modal/Modal.jsx","App.js","reportWebVitals.js","index.js"],"names":["Timer","time","className","src","alt","m","s","Card","fill","moneyFill","get","id","setCardId","cardId","useState","cardChosen","setCardChosen","moneyGet","onClick","classNames","chosen","Enrollment","cards","payMethod","showCardData","find","card","console","log","money","cardAlert","bitcoinAlert","checkAlert","alert","showAlert","type","Cards","map","Modal","setShowModal","setPayMethod","payIcon","setPayIcon","value","iconChanger","onChange","target","href","App","showModal","сlassName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0472c630.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Timer.scss';\n\nexport const Timer = ({time}) => {\n\n  return (\n\n    <div className=\"timer\">\n      <img className=\"timer__icon\" src=\"./images/timer.svg\" alt=\"\"/>\n\n      <div className=\"timer__digits-wrapper\">\n        <p className=\"timer__hours\">00:</p>\n        <p className=\"timer__minutes\">\n          {time.m < 10 ? `0${time.m}:` : `${time.m}:`}\n        </p>\n        <p className=\"timer__seconds\">\n          {time.s < 10 ? `0${time.s}` : `${time.s}`}\n        </p>\n\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './Card.scss';\nimport classNames from 'classnames';\n\nexport const Card = ({fill, moneyFill, get, id, setCardId, cardId }) => {\n  const [cardChosen, setCardChosen] = useState(false);\n  const moneyGet = moneyFill * 2\n  const buck = '$ '\n\n  return (\n    <div\n      id={id}\n      onClick={() => {\n        setCardId(id);\n        setCardChosen(!cardChosen);\n      }}\n      className={classNames('card', { chosen: id === cardId })}\n    >\n\n      <div className=\"card__regular-text\">\n        <span className=\"card__fill\">{fill}</span>\n        <span className=\"card__money-fill\">{`${buck}${moneyFill}`}</span>\n      </div>\n\n      <div className=\"card__color-text\">\n        <span className=\"card__get\">{get}</span>\n        <span className=\"card__money-get\">{`${buck}${moneyGet}`}</span>\n      </div>\n\n      <div>\n        <img\n          className={classNames('card__ellipse', {\n            \"card__ellipse--chosen\": id === cardId\n          })}\n          alt=\"\"\n          src={id !== cardId \n            ? \"./images/ellipse-inactive.svg\"\n            : \"./images//ellipse-active.svg\"\n          }\n        />\n      </div>\n    </div>\n  )\n} ","import React from 'react';\nimport './Enrollment.scss';\n\n\nexport const Enrollment = ({ cards, cardId, payMethod }) => {\n  const showCardData = cards.find(card => card.id === cardId);\n  console.log(showCardData);\n  const money = showCardData.moneyFill*3;\n\n  const cardAlert = `You have chosen card pay method. $${money} will be credited to your account.`\n\n  const bitcoinAlert = `You have chosen bitcoin pay method. $${money} will be credited to your account.`\n\n  const checkAlert = `You have chosen check pay method. $${money} will be credited to your account.`\n\n  const showAlert = () => {\n    switch(payMethod) {\n      case 'card':\n        alert (cardAlert);\n        break;\n      case 'bitcoin':\n        alert (bitcoinAlert);\n        break;\n      case 'bill':\n        alert (checkAlert);\n        break;\n      default: return;\n    }\n  }\n  \n  return (\n    <>\n      <div className=\"enrollment\">\n        <p className=\"enrollment__text\">\n          <span className=\"enrollment__text--big-colored\">\n            {`$${showCardData.moneyFill*3}`}\n          </span>\n          <span className=\"enrollment__text--small-colored\">,00 </span>\n          <span className=\"enrollment__text--regular\"> \n            будет зачислено вам на счет\n          </span>\n        </p>\n        <button\n          onClick={() => showAlert()}\n          className=\"enrollment__button\"\n          type=\"button\"\n        >Пополнить\n        </button>\n      </div>\n    </>\n  )\n}","import React, { useState } from 'react';\nimport './Cards.scss';\nimport { Card } from '../card/Card';\nimport { Enrollment } from '../enrollment/Enrollment';\n\nconst cards = [\n  {id: 1, fill: 'Пополнить на', moneyFill: 50, get: 'Получить'},\n  {id: 2, fill: 'Пополнить на', moneyFill: 100, get: 'Получить'},\n  {id: 3, fill: 'Пополнить на', moneyFill: 500, get: 'Получить'}\n];\n\nexport const Cards = ({ payMethod }) => {\n  const [cardId, setCardId] = useState(0);\n\n  return (\n    <div className=\"cards\">\n      <div className=\"cards__wrapper\">\n        {cards.map((card) => (\n          <div key={card.id} className=\"cards__card\"> \n            <Card {...card} id={card.id} setCardId={setCardId} cardId={cardId} />\n          </div>\n        ))}\n      </div>\n      \n      <div>\n        {cardId !== 0 && <Enrollment payMethod={payMethod} cardId={cardId} cards={cards}/>}\n      </div>\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport './Modal.scss';\nimport { Timer } from '../timer/Timer';\nimport { Cards } from '../cards/Cards';\n\nexport const Modal = ({ setShowModal }) => {\n  const [payMethod, setPayMethod] = useState(\"card\");\n  const [payIcon, setPayIcon] = useState(\"./images/bank-card-img.svg\");\n  const [time, setTime] = useState({ s: 0, m: 16 });\n\n  const iconChanger = (value) => {\n    switch (value) {\n      case 'card':\n        return \"./images/bank-card-img.svg\";\n      case 'bitcoin':\n        return \"./images/bitcoin-1.svg\";\n      case 'bill':\n        return \"./images/bill.svg\";\n      default :\n       return \"./images/bank-card-img.svg\";\n    }\n  }\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__percent\">+100%</div>\n      <button \n        onClick={() => {\n          setShowModal(false)\n        }}\n        className=\"modal__close\"\n        type=\"button\"\n      ></button>\n      <div className=\"modal__timer\">\n        <Timer time={time}/>\n      </div>\n      <h2 className=\"modal__heading\">Увеличьте свой депозит!</h2>\n      <div className=\"modal__select-wrapper\">\n        <img\n          src={iconChanger(payIcon)}\n          alt=\"\"\n          className={`modal__img ${payMethod === \"bitcoin\"\n            ? \"modal__img--transformed\" \n            : \"\"\n            }`}\n        />\n        <select\n          className=\"modal__select\"\n          value={payMethod}\n          onChange={({target}) => {\n            setPayMethod(target.value);\n            setPayIcon(target.value)\n          }}\n        >\n          <option value=\"card\" className=\"modal__select-option\">Банковская карта</option>\n          <option value=\"bitcoin\" className=\"modal__select-option\">Биткоин</option>\n          <option value=\"bill\" className=\"modal__select-option\">Выставить счет</option>\n        </select>\n        <img className=\"modal__arrow\" src=\"./images/arrow.svg\" alt=\"\"/>\n      </div>\n      <div className=\"modal__cards\">\n        <Cards payMethod={payMethod}/>\n      </div>\n\n      <div className=\"modal__bottom\">\n        <p className=\"modal__info\">\n          При пополнении счета с банковской карты\n          списание средств происходит по курсу банка клиента\n        </p>\n        {/*eslint-disable-next-line jsx-a11y/anchor-is-valid*/}\n        <a className=\"modal__link\" href=\"#\">подробнее</a>\n      </div>\n    </div>\n  );\n}","import './App.scss';\nimport React, { useState } from 'react';\nimport { Modal } from './components/modal/Modal';\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <button\n        onClick={() => {\n          setShowModal(true);\n        }}\n        id=\"button\" \n        сlassName=\"button\" \n        type=\"button\"\n      >\n      Открыть модалку\n      </button>\n      {showModal && <Modal setShowModal={setShowModal}/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}